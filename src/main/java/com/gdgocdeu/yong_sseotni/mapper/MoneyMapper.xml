<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="MoneyMapper">
	
	<update id="deleteMoney" parameterType="Money">
		UPDATE money
		SET
			del_ny=#{del_ny}
		WHERE
			money_idx=#{money_idx}
	</update>
	
	<select id="findByIdx" parameterType="Integer" resultType="Money">
		SELECT * FROM money
		WHERE money_idx=#{money_idx} AND del_ny='n'
	</select>
	
	<select id="compareMoney" parameterType="map" resultType="map">
	    SELECT
	        SUM(CASE 
	            WHEN YEAR(STR_TO_DATE(m.money_when, '%Y-%m-%d')) = #{currentYear} 
	                 AND MONTH(STR_TO_DATE(m.money_when, '%Y-%m-%d')) = #{currentMonth} 
	            THEN m.money_out 
	            ELSE 0 
	        END) AS currentMonthOut,
	        SUM(CASE 
	            WHEN YEAR(STR_TO_DATE(m.money_when, '%Y-%m-%d')) = #{lastYear} 
	                 AND MONTH(STR_TO_DATE(m.money_when, '%Y-%m-%d')) = #{lastMonth} 
	            THEN m.money_out 
	            ELSE 0 
	        END) AS lastMonthOut
	    FROM `user` u
	    INNER JOIN money m ON u.user_idx = m.user_idx
	    WHERE u.user_idx = #{user_idx}
	    AND m.del_ny='n'
	</select>
	
	<select id="getDailyTotal" parameterType="map" resultType="map">
	    SELECT
	        SUM(m.money_in) AS dailyMoneyIn,
	        SUM(m.money_out) AS dailyMoneyOut
	        
	    FROM `user` u
	    INNER JOIN money m ON u.user_idx = m.user_idx
	    WHERE
	        u.user_idx = #{user_idx}
	        AND YEAR(STR_TO_DATE(m.money_when, '%Y-%m-%d')) = #{year}
	        AND MONTH(STR_TO_DATE(m.money_when, '%Y-%m-%d')) = #{month}
	        AND DAY(STR_TO_DATE(m.money_when, '%Y-%m-%d')) = #{day}
	        AND m.del_ny='n'
	</select>
	
	<select id="getMonthlyMoneyList" parameterType="map" resultType="map">
		SELECT
			money_type,
			money_where,
			CASE
	            WHEN money_in &lt;&gt; 0 THEN CONCAT('+', money_in)
	            WHEN money_out &lt;&gt; 0 THEN CONCAT('-', money_out)
	            ELSE NULL
	        END AS money
			
		FROM `user` u
		INNER JOIN money m ON u.user_idx = m.user_idx
		WHERE
			u.user_idx = #{user_idx}
			AND YEAR(STR_TO_DATE(m.money_when, '%Y-%m-%d')) = #{year}
	        AND MONTH(STR_TO_DATE(m.money_when, '%Y-%m-%d')) = #{month}
        	AND (money_in &lt;&gt; 0 OR money_out &lt;&gt; 0)
        	AND m.del_ny='n'
	</select>
	
	<select id="getDailyMoneyList" parameterType="map" resultType="map">
		SELECT
			money_type,
			money_where,
			CASE
	            WHEN money_in &lt;&gt; 0 THEN CONCAT('+', money_in)
	            WHEN money_out &lt;&gt; 0 THEN CONCAT('-', money_out)
	            ELSE NULL
	        END AS money
			
		FROM `user` u
		INNER JOIN money m ON u.user_idx = m.user_idx
		WHERE
			u.user_idx = #{user_idx}
			AND YEAR(STR_TO_DATE(m.money_when, '%Y-%m-%d')) = #{year}
	        AND MONTH(STR_TO_DATE(m.money_when, '%Y-%m-%d')) = #{month}
	        AND DAY(STR_TO_DATE(m.money_when, '%Y-%m-%d')) = #{day}
        	AND (money_in &lt;&gt; 0 OR money_out &lt;&gt; 0)
        	AND m.del_ny='n'
	</select>
	
	<select id="getMonthlyTotal" parameterType="map" resultType="map">
	    SELECT
	        SUM(m.money_in) AS totalMoneyIn,
	        SUM(m.money_out) AS totalMoneyOut
	        
	    FROM `user` u
	    INNER JOIN money m ON u.user_idx = m.user_idx
	    WHERE
	        u.user_idx = #{user_idx}
	        AND YEAR(STR_TO_DATE(m.money_when, '%Y-%m-%d')) = #{year}
	        AND MONTH(STR_TO_DATE(m.money_when, '%Y-%m-%d')) = #{month}
	        AND m.del_ny='n'
	</select>
	
	<insert id="save" parameterType="Money">
		insert into `money`
		(
			user_idx,
			money_when,
			money_type,
			money_where,
			money_in,
			money_out,
			created_date
		)
		values
		(
			#{user_idx},
			#{money_when},
			#{money_type},
			#{money_where},
			#{money_in},
			#{money_out},
			SYSDATE()
		)
	</insert>

</mapper>